// Capture The flag (CTF) Game using Unity MLAgents.
// This project consists of 2 teams A and B and 1 flag

// Project Context
// Phase 1: Simple Training
// Flag in center

// PrivateAgentPiko will be used for Phase 1 for both of the teams A and B, and similarly PrivateAgentPikachu for Phase2 for both teams
// train_1.yaml and train_2.yaml should be used for training Phase1 and Phase2 respectively

// No tagging, just race to grab and return

// The config (yaml) file for Phase 1
---
behaviors:
  CaptureTheFlagAgent:
    trainer_type: ppo
    hyperparameters:
      batch_size: 1024
      buffer_size: 10240
      learning_rate: 3.0e-4
      beta: 5.0e-4
      epsilon: 0.2
      lambd: 0.95
      num_epoch: 3
      learning_rate_schedule: linear

    network_settings:
      normalize: true
      hidden_units: 128
      num_layers: 2
      vis_encode_type: simple

    reward_signals:
      extrinsic:
        gamma: 0.99
        strength: 1.0

    max_steps: 5e5
    time_horizon: 64
    summary_freq: 10000
    threaded: true
---

// Phase 2: Strategic Depth
 // Add tagging

 // Add cover/obstacles

 // Train with multiple agents

// The config (yaml) file for Phase 2
---
 behaviors:
  CaptureTheFlagStrategic:
    trainer_type: ppo
    hyperparameters:
      batch_size: 2048
      buffer_size: 20480
      learning_rate: 3.0e-4
      beta: 5.0e-4
      epsilon: 0.2
      lambd: 0.95
      num_epoch: 3
      learning_rate_schedule: linear

    network_settings:
      normalize: true
      hidden_units: 256
      num_layers: 2
      vis_encode_type: simple

    reward_signals:
      extrinsic:
        gamma: 0.99
        strength: 1.0

    max_steps: 1e6
    time_horizon: 128
    summary_freq: 10000
    threaded: true
---
// The rewards should be like this at the end of Phase 2.


| Event                       | Reward  | Purpose                  |
| --------------------------- | ------- | ------------------------ |
| Pick up flag                | `+0.5`  | Encourage flag pickup    |
| Return flag to base (score) | `+1.0`  | Goal of the game         |
| Tag opponent (if allowed)   | `+0.2`  | Promote defense          |
| Get tagged                  | `-0.2`  | Penalize bad positioning |
| Drop flag (tagged or idle)  | `-0.1`  | Discourage losing flag   |
| Time penalty (per step)     | `-0.01` | Encourage speed          |

// Development Environment
// Language: C#
// Unity Version: 6000.0.46f1

// PrivateAGentPiko be used in Phase 1 and PrivateAgentPikachu should be used at the Phase 2.

// Additional Notes
// Feel free to ask questions if you need more information about the project intentions.

// Instructions
// If an agent hits the flag's Collider then that particular agent has captured the flag. Then he has to make it to base.
// If a team collides with another team cause a little collision effect and a little displacement for TeamA agent to displacement the agent. and if it hits 2 times Then the flag goes to the orignal point.
// if someone has captured the flag the flag becomes invisible not the pole from the attached pole.
// For training the phase 1, the behaviour of the Agent is SpaceSize = 36 only Discrete Branches Branch0 : 3, Branch1: 3. inference: Burst. Behaviour type defaultchild sensors: checked.


